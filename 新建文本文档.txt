html:
1.是用来完成静态网页的，超文本标记语言，可以包含图片，连接，视频，小程序，音乐等。
2.标记：html是由大量的标记（标签）组成的，开始标签和结束标签要匹配.
3.<! -- --> html 的注释
4.&nbsp;向网页中插入一个空格 
5.css全称叫做层叠样式表，主要作用就是用来修饰网页效果的，主要是通过css代码来实现的。最终实现的效果是可以将
  html网页代码和css代码进行分离，也是为了提高css代码的复用性。
6.<.../>是自闭标签，只有在开始标签和结束标签中无内容时才可使用
7.<link> 的rel属性值当引入的是css代码时必须是 stylesheet
8.SQL 中字符串为 varchar
9.使用desc 表名查看表结构时，其中的NULL项意为值可否为空
10.insert into table(field) values();   插入指定字段值的一项记录
11.set names gbk;   将数据库中所有编码指定为GBK 可解决乱码,
12.不用where 指定操作项时，对象为表中全体
13.select count(*) (使用count函数操作)
14.JSP文件在WEB-INF中时无法被直接访问，必须通过服务器跳转
15.Servlet技术是什么

16.二进制数在最后一位 加0 即为*2；
17.浮点数意为小数点的位置是浮动的
18.IEEE 754 规范：美国电子电气工程师协会浮点数表示规范
19.boolean 中 true 为00000001 false 为00000000
20.double 也有后缀 D 和 d
21.快捷复制： ctrl + alt + 上 或 下 快捷移动： alt + 上或下
22.浮点数特殊值 Infinity: 无穷大  3.14/0  Double.MAX_VALUE *2      NaN: Not a Number     Math.sqrt(-5)
23.自动转型为保持值不变，为运算转型，强制转型为一刀切除多余字节，值可能会改变(不是溢出)
24.ctrl + n   新建一个同包类
25.boolean 的二进制数：true 是 1 ， false 是 0; 
26.位运算：同一个数异或两次，得到原值 ，异或原则：不同得1，相同得0 ; & 见0则0 ， | 见1则1；
27.带符号的移位 >> 正数全补0 ， 负数全补1. 不带符号的移位 >>> 全补 0 ；<< 与符号无关，全补0
28.byte 自动转 int 负数左边全补1？没错全补 1 值才相等
29.++的真正操作：在后先取原值，再自增，再操作原值；在前先自增，再取新值，再操作新值。如 a = a++ 后 a 的值为 原a.
30.位运算也有拓展赋值。
31.拓展赋值的强制转型是在运算之前对右边的值做转型操作。
32.自建 java 语句模板： window>preferences>java>editor>templates>new
33.switch case 无法判断long 与double 等，能判断 byte ,short,int ,char,emun(枚举)，1.7后还可以判断String
34.循环可以起名,常用于跳出多层if或循环；for 不写循环条件则无条件执行循环体，为死循环；
35.~为求反运算
36.ctrl + i :自动调整选中代码的缩进
37.循环命名后可用break 与 continue 控制指定循环
38.Arrays.sort(); 可对基本类型与引用类型使用
39.Arrays.binarySearch(数组，目标值); 二分法查找 ,针对有序数组，若查不到返回负数的无意义值
40.Arrays.fill(数组，值); 将指定数组的所有元素覆盖为目标值
41.初始化的意义在于分配内存空间以便使用
42.Java参数是值传递，但基本类型与引用类型传递的内容不同，基本类型传参后修改不影响变量本身，但引用类型传递的是地址
	，在方法中修改会影响具体的指向对象。
43.this 调用重载构造方法时，一般是参数少的调用参数多的构造方法,因为这样可以一次看到全部成员变量。
44.this 调用构造方法时与 super 相同，必须放在第一行
45.子类创建对象时，先创建父类对象，然后再创建子类对象与之绑定作为一个对象，子类对象创建时只包含特有属性和行为，
	调用成员时先找子类再找父类(重写)
46.重写父类方法时仍然可以通过super调用父类的方法，包括正在重写的方法
47.构造方法的作用不限，仅仅是在新建对象时执行的一段代码
48.超类的静态无法被继承（成员，静态块）,但静态变量可以在子类中直接使用，因为前面省略了类名
49.新建派生类对象时，先默认执行超类的无参构造方法(前提是派生类构造方法中不使用super 关键字调用超类的有参构造)
	新建派生类对象必先调用超类构造，是因为派生类构造中必含有隐含调用 super
50.静态成员也可以用对象去调用，但一般不用
51.protected 修饰的成员可以被子类及家族类（子类的子类及子类...）中调用
52.对象命名快捷键：Alt + Shift + L;Home :到行头，End到行尾;ctrl + home:文件头，ctrl + end:文件尾
	shift + enter : 跳转下一行，ctrl + shift + enter :跳转上一行
53.静态变量赋值与静态初始化块谁在前谁先执行;成员变量赋值先于构造方法的执行
54.接口的所有成员均为 public
55.父子类调用查找方法的情况只适用于能继承的情况，private 与 static 和 成员变量 不存在重写或重载
	编译期绑定（前期绑定）：私有方法，静态方法，成员变量 ； 运行期绑定（后期绑定）：非静态方法
56.局部内部类中，使用外面的局部变量默认必须是 final ,防止内外混乱

57.Object 中的 toString 方法返回的是对象的 经过处理后的内存地址 ;equals 方法 默认返回的是当前对象与比较对象的内存地址是否相同
58.ctrl + 1 弹出语句最前方的灯号提示
59.字符串连接运算符会 自动创建新的对象将两边的字符串放在一起，多个字符串连接运算符会降低效率
60.StringBuilder 新建对象后默认基本追加长度为16;
61.正则表达式中 | 只能用在()中， （）是正则表达式中的优先运算符，若要单纯表示字符（）则需要转义

62.包装类值可以用各种类型的value()方法取到相应类型的基本类型值
63.Integer.valueOf()方法会访问缓存对象数组（256个对象，-128 到127）直接取出,当值在范围内时会节约资源,不同引用访问同一个对象
64.parseInt()等方法可以解析其他进制的字符串，在参数后面加上进制,toBinaryString()等方法可以将值转换为指定进制的字符串
65.没有 parseCharacter() 方法，因为不需要
66.divide(BigDecimal) 除法不支持无理数，要算的话需要设置额外的参数：保留位数与舍入方式(注意保留位数为负数的情况),当保留位数超过double限制时（超过16位）,可以使用toString（）方法
67.BigDecimal.setScale() 专门作舍入运算，参数同上，结果被封装为一个新对象
68.BigDecimal.pow(n):求n次方
69.对于Date对象，显示的是真实时间，而getTime()方法得到的时具体毫秒值
70.SimpleDateFormat 在创建对象时需要指定格式，其严格区分大小写
71.LinkedList 的 size()方法得到数据数量，是int类型(并不是容量)
72.Iterator 的next()方法：先取出指定引用位置的数据，再将下一个数据的引用存好
73.Math.min(a,b) 求a与b的最小值
74.ArrayList 的迭代器本质上仍然是下标递增
75.HashMap 中的键值一一对应,若重新输入相同键的值则覆盖，且整体存储是无序的(并不是随机放置，由内部算法决定)
76.HashMap  的初始长度为16 ,计算键值下标两个参数（键的哈希值与哈希表的长度）,若同下标有链表数据，键不同时，
	则将键连在链表头部
77.equals 与 hashCode 方法默认比较的都是内存地址
78.HashMap 本身无法遍历，也不能创建迭代器（位置随机的关系）
79.ctrl + 1: 提示添加方法
80.main 方法若不捕获处理抛出的异常，会由JVM接收并于控制台打印，然后虚拟机自动关闭，程序停止
81.新建异常种类时，继承Exception 和 RuntimeException 区别不大，在于有没有默认抛出管道
82.字符串有 endsWith() 方法用于判断 末尾是否匹配
83.read(byte[] buff) 若能读取到数据返回值为一次读取到的字节值;若最后一次读取的数量少于数组长度，则只覆盖前面的字节，后面的保留
84.throw 异常后方法终止，返回调用位置继续执行
85.GB2312中 63 代表? 表示没有，不认识
86.栈：后入先出的数据结构
87.wait(),notify()等方法，必须在 synchronized 代码块中才能执行，否则报错
88.127.0.0.1 或 localhost 均表示本机回环ip
89.设计时，阻塞的功能应设置为线程执行
90.类对象在方法区中，且一个类只有一个
91.通过反射即使访问到私有变量也不能直接通过 set（） 方法赋值,需要先 setAccessible() 方法设置为可访问状态
92.JDBC 属性文件中不允许有任何多余字符（比如空格）
93.statement 执行 SQL 时输入的语句若包含 SQL 关键字则会出现系统漏洞(SQL 注入攻击)

94."-- "是SQL语句中的注释 
95.删除数据库操作： drop database if exits + 数据库名
96.相邻兄弟选择器拓展：兄元素~弟元素   表示兄元素后所有的兄弟弟元素
97.定位元素时最好写全索引，会提高浏览器执行效率
98.JS声明变量用var，没有类型区分，是弱类型,可以变更任意类型的数据
99.JS的优势：安全性的体现：只能在浏览器范围内运行，并不能访问用户的存储
100.JS正则表达式中的 ^ $ 符：表示从第一位开始检测到任意位置满足即可 ， 到最后一位结束检测满足任意位置即可
101.在JS中声明变量是有没有var均可，都代表 window的成员变量；但在函数中有var 代表局部变量，没有代表全局变量，访问
 	权限不同；
102.对象直接调用的属性为一级属性，如ID 等可直接调用；二级属性如 width 等需要间接多次调用
103.查看端口占用情况的DOS命令: netstat -ano      ,强制关闭进程：taskkill /f /pid PID           。(均无分号)
104.Cookie 的 setPath 方法 若web应用为默认时，request.getContextPath 返回空字符串，不合规则,最好在其后添加 "/"

105.eclipse 类不编译解决：4个clean